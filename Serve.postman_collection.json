{
	"info": {
		"_postman_id": "355b6f24-cd9f-4b93-825f-e1d20e1b0a54",
		"name": "Serve",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25154389"
	},
	"item": [
		{
			"name": "geração de massa",
			"item": [
				{
					"name": "busca nova pessoa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var firstResult = pm.response.json().results[0];\r",
									"\r",
									"pm.globals.set(\"username\", firstResult.name.first);\r",
									"pm.globals.set(\"useremail\", firstResult.email);\r",
									"pm.globals.set(\"userpassword\", firstResult.login.password);\r",
									"pm.globals.set(\"userId\", firstResult.login.id);\r",
									"\r",
									"console.log(firstResult.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://randomuser.me/api/",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var firstResult = pm.response.json().results[0];\r",
									"\r",
									"pm.globals.set(\"username\", firstResult.name.first);\r",
									"pm.globals.set(\"useremail\", firstResult.email);\r",
									"pm.globals.set(\"userpassword\", firstResult.login.password);\r",
									"pm.globals.set(\"userId\", firstResult.login.id);\r",
									"\r",
									"console.log(firstResult.id);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "header",
									"type": "string"
								},
								{
									"key": "value",
									"value": "special-key",
									"type": "string"
								},
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://randomuser.me/api/",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}\r",
									"    \"items\";{\r",
									"        \"type\";\"boolean\"\r",
									"    }\r",
									"\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(),pm.globals.get('schema'))).to.be.true;\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n    \"nome\": \"{{username}}\",\r\n    \"email\": \"{{useremail}}\",\r\n    \"password\": \"{{userpassword}}\",\r\n    \"administrador\": \"false\"\r\n}\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev//usuarios{{userid}}",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"",
								"usuarios{{userid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cadastro de usuario",
			"item": [
				{
					"name": "novo cadastro",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"pm.globals.set,\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"message\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"message\"\r",
									"  ]\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"pm.environment.unset(\"variable_key\");\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"validar a mensagem\", function () {\r",
									"    pm.expect(pm.response.json().menssage).to.be.eql(\"cadastro realizado com sucesso\")\r",
									"});\r",
									"pm.test(\"capturar o id\", function (){ pm.global.set(\"userid\", pm.response.json()._id)})\r",
									"\r",
									"pm.test(\"schema é valido\", function(){ pm.expect(tv4.validate(date2, pm.globals.get('schema\")'))).to.be.true;})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"{{username}}\",\r\n    \"email\": \"{{useremail}}\",\r\n    \r\n    \"password\": \"{{userpassworld}}\",\r\n    \"administrador\": \"false\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar usuario pelo id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('validar o id retornado', function(){\r",
									"    console.log(pm.globals.get('userId'))\r",
									"    console.log(pm.response.json()._Id)\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://randomuser.me/api/JA70BM3GKC7j2NhI",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								"JA70BM3GKC7j2NhI"
							]
						}
					},
					"response": []
				},
				{
					"name": "update de usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('validar usuario como administrador', function() {\r",
									"    pm.expect(pm.response.json().administrador).to.be.eql('true');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{username}}\",\r\n  \"email\": \"{{useremail}}\",\r\n  \"password\": \"{{userpassword}}\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://randomuser.me/api/JA70BM3GKC7j2NhI",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								"JA70BM3GKC7j2NhI"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "header",
				"type": "string"
			},
			{
				"key": "value",
				"value": "https://serverest.dev",
				"type": "string"
			},
			{
				"key": "key",
				"value": "baseURL",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "'https://randomuser.me/api/",
			"type": "string"
		}
	]
}